<?php/* * This file is part of the IdeaToLife package. * * (c) Youssef Jradeh <youssef.jradeh@ideatolife.me> * */namespace App\Http\Controllers\Projects;use Excel;use App\Http\Controllers\WhoController;use App\Models\District;use Idea\Helpers\Paging;class DistrictController extends WhoController {		public $filePath = "sites/";		protected $permissions = [		"index" => ["code" => "site_configuration", "action" => "read"],	];		/**	 *	 * @return array	 */	protected static function validationRules() {		return [			'index' => [			],		];	}		/**	 * Display a listing of the resource.	 *	 * @return \Illuminate\Http\Response	 */	public function index() {                        $query = District::where("governorate_id", ">", 0);                        return $this->successData(new Paging($query));	}                /**        * Display the specified resource.        *        * @param int $id        *        * @return \Illuminate\Http\Response        */        public function one($id)         {            $district = District::find($id);            if (!$district) {                return $this->failed("Invalid District Id");            }            return $this->successData($district);        }                /**        * Store a newly created resource in storage.        *        * @return \Illuminate\Http\Response        */        public function store()         {            $district = new District();            $district->name = request("name");            $district->governorate_id = request("governorate_id");            $district->save();            return $this->successData($district);        }        /**         * Update the specified resource in storage.         *         * @param int $id         *         * @return \Illuminate\Http\Response         */        public function update($id)         {            $district = District::find($id);            if (!$district) {                return $this->failed("Invalid District");            }            if(District::where("name", "LIKE", request("name"))->where("id", "!=", $id)->count() > 0){                return $this->failed("District Name already exists!");            }            $district->name = request("name");            $district->governorate_id = request("governorate_id");            $district->save();            return $this->successData($district);        }               /**	 * Display a listing of the resource.	 *	 * @return \Illuminate\Http\Response	 */	public function search() {             // checking for the search query            $projectId = (int)request("project_id");            $governorate = request("governorate_id");            $searchQuery = !empty(request('query')) ? request('query') : "";            $data = District::where(function ($q) use ($searchQuery, $governorate, $projectId) {                $q->where('name', 'LIKE', "%" . $searchQuery . "%");                                if($governorate > 0)                    $q->where('governorate_id', $governorate);                                if($projectId>0)                {                    $sites = \App\Models\ProjectDetail::where("project_id", $projectId)->pluck("site_id","site_id")->toArray();                    $districts = \App\Models\SiteReference::whereIn("id", $sites)->pluck("district_id","district_id")->toArray();                    $q->whereIn("id", $districts);                }                                })->take(10)->get();                        return $this->successData($data);	}            /**	 * Display a listing of the resource.	 *	 * @return \Illuminate\Http\Response	 */	public function multipleDistricts()         {             // checking for the search query            $governorates = request("governorates");            $projectId = (int)request("project_id");            $searchQuery = !empty(request('query')) ? request('query') : "";            $data = District::where(function ($q) use ($searchQuery, $governorates, $projectId) {                $q->where('name', 'LIKE', "%" . $searchQuery . "%");                                if(!empty($governorates))                    $q->whereIn('governorate_id', $governorates);                                if($projectId>0)                {                    $districts = \App\Models\ProjectDetail::where("project_id", $projectId)->pluck("district_id","district_id")->toArray();                    if(!empty($districts) && (@$districts[0] != 0))                        $q->whereIn("id", $districts);                }                                                })->take(10)->get();                        return $this->successData($data);	}            /*     * Import District Data     */    public function importData()     {        if (!$this->request->hasFile("import_file")) {            return $this->failed('Invalid Excel File or Form Id');        }                        Excel::load(            $this->request->file('import_file')                ->getRealPath(), function ($reader) {                    $dataList = $reader->toArray();                        $governorates = \App\Models\Governorate::pluck("id","name")->all();                                        foreach ($dataList as $index => $value) {                                                try {                                if(!empty($value['governerate']) && !empty($value['district']))                                {                                    $governorateId = (int)@$governorates[$value['governerate']];                                    if($governorateId == 0){                                        $governorate = new \App\Models\Governorate();                                        $governorate->name = $value['governerate'];                                        $governorate->save();                                        $governorateId = $governorate->id;                                        $governorates[$value['governerate']] = $governorate->id;                                                                                }                                    $district = new District();                                    $district->name = $value['district'];                                    $district->governorate_id = $governorateId;                                    $district->save();                                }                                                     } catch (\Exception $exception) {                            throw $exception;                            exit();//continue;                        }                    }                }        );                return $this->success();            }        /**        * Remove the specified resource from storage.        *        * @param int $id        *        * @return \Illuminate\Http\Response        */       public function destroy($id)        {           try {               if (!$district = District::find($id)) {                   return $this->failed("Invalid District");               }               if((int)@\App\Models\SiteReference::where('district_id', $id)->count() == 0){                    $district->delete();               }else                   return $this->failed("Please remove first related data to remove this resourse.");               return $this->success('District Deleted');           } catch (\Exception $e) {               return $this->failed('destroy error');           }       }}